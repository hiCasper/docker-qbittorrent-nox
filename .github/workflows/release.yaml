name: Release

on:
  workflow_dispatch:  # trigger it manually

permissions:
  packages: write

env:
  QBT_VERSION: "4.3.9"

  # This is a positive integer number that allows to differentiate between consecutive builds of the same qBittorrent version.
  # When `QBT_VERSION` is incremented, this value must reset to 1.
  TAG_RELEASE_NUMBER: 1

jobs:
  build:
    name: Release - Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - "linux/amd64"
          - "linux/arm/v7"
          - "linux/arm64/v8"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set platform name
        id: set-platform-name
        run: |
          echo "PLATFORM_NAME=${{ matrix.platform }}" | sed 's|/|-|g' >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            QBT_VERSION=${{ env.QBT_VERSION }}
          load: true
          platforms: ${{ matrix.platform }}
          labels: |
            org.opencontainers.image.description=An advanced BitTorrent client programmed in C++, based on Qt toolkit and libtorrent-rasterbar
            org.opencontainers.image.documentation=https://github.com/qbittorrent/docker-qbittorrent-nox
            org.opencontainers.image.licenses=GPL-3.0+
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/qbittorrent/docker-qbittorrent-nox
            org.opencontainers.image.title=qbittorrent-nox docker image
            org.opencontainers.image.url=https://github.com/qbittorrent/docker-qbittorrent-nox
            org.opencontainers.image.vendor=qBittorrent
            org.opencontainers.image.version=${{ env.QBT_VERSION }}
          tags: |
            hicasper/qbittorrent-nox:latest
            ghcr.io/hicasper/qbittorrent-nox:latest

      - name: Test run
        run: |
          docker run \
            --entrypoint "/usr/bin/qbittorrent-nox" \
            --platform ${{ matrix.platform }} \
            hicasper/qbittorrent-nox:latest \
            --version

      # To run the image locally:
      # 1. `docker load < artifact`
      # 2. remove `build` field and replace `image` field with the imported image in docker-compose.yml
      # 3. `docker compose up`
      - name: Export image
        run: |
          docker tag \
            hicasper/qbittorrent-nox:latest \
            hicasper/qbittorrent-nox:${{ env.QBT_VERSION }}
          docker save \
            --output qbittorrent-nox_${{ env.QBT_VERSION }}_${{ steps.set-platform-name.outputs.PLATFORM_NAME }} \
            hicasper/qbittorrent-nox:${{ env.QBT_VERSION }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: qbittorrent-nox_${{ env.QBT_VERSION }}_${{ steps.set-platform-name.outputs.PLATFORM_NAME }}
          path: qbittorrent-nox_${{ env.QBT_VERSION }}_${{ steps.set-platform-name.outputs.PLATFORM_NAME }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Upload to registries
        run: |
          docker push hicasper/qbittorrent-nox:latest-${{ steps.set-platform-name.outputs.PLATFORM_NAME }}
          docker push ghcr.io/hicasper/qbittorrent-nox:latest-${{ steps.set-platform-name.outputs.PLATFORM_NAME }}


  upload:
    name: Release - Upload
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create multi-arch images
        run: |
          docker manifest create \
            hicasper/qbittorrent-nox:${{ env.QBT_VERSION }}-${{ env.TAG_RELEASE_NUMBER }} \
            --amend hicasper/qbittorrent-nox:latest
          docker manifest create \
            hicasper/qbittorrent-nox:latest \
            --amend hicasper/qbittorrent-nox:latest
          docker manifest create \
            ghcr.io/qbittorrent/docker-qbittorrent-nox:${{ env.QBT_VERSION }}-${{ env.TAG_RELEASE_NUMBER }} \
            --amend ghcr.io/hicasper/qbittorrent-nox:latest
          docker manifest create \
            ghcr.io/hicasper/qbittorrent-nox:latest \
            --amend ghcr.io/hicasper/qbittorrent-nox:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Upload to registries
        run: |
          docker manifest push hicasper/qbittorrent-nox:${{ env.QBT_VERSION }}-${{ env.TAG_RELEASE_NUMBER }}
          docker manifest push hicasper/qbittorrent-nox:latest
          docker manifest push ghcr.io/hicasper/qbittorrent-nox:${{ env.QBT_VERSION }}-${{ env.TAG_RELEASE_NUMBER }}
          docker manifest push ghcr.io/hicasper/qbittorrent-nox:latest
